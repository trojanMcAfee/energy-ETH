{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Cant_be_zero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "buyerBalance",
          "type": "uint256"
        }
      ],
      "name": "Not_enough_funds",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct IPermit2.Permit2Buy",
          "name": "buyOp_",
          "type": "tuple"
        }
      ],
      "name": "issue",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "696:1858:2:-:0;;;761:64;;;-1:-1:-1;;;;;;761:64:2;;;782:42;761:64;;;;831;;;;;852:42;831:64;;;906:71;;;;;;934:42;906:71;;;1021:42;983:81;;1071:44;;;;;;;;;;1976:113:47;;;;;;;;;;;;;-1:-1:-1;;;1976:113:47;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:47;;;2050:5;2042;:13;;;;;;:::i;:::-;-1:-1:-1;2065:7:47;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;696:1858:2;;14:127:69;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:69;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:69;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:69;;;2580:26;2531:89;-1:-1:-1;;1335:1:69;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:69;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:69;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:69;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:69:o;:::-;696:1858:2;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100c25760003560e01c8063395093511161007f57806398d5fdca1161005957806398d5fdca146101fd578063a457c2d714610212578063a9059cbb14610232578063dd62ed3e1461025257600080fd5b8063395093511461019257806370a08231146101b257806395d89b41146101e857600080fd5b806306fdde03146100c7578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610141578063313ce5671461016157806331e8cb041461017d575b600080fd5b3480156100d357600080fd5b506100dc610272565b6040516100e99190610d9a565b60405180910390f35b3480156100fe57600080fd5b5061011261010d366004610dc5565b610304565b60405190151581526020016100e9565b34801561012e57600080fd5b506002545b6040519081526020016100e9565b34801561014d57600080fd5b5061011261015c366004610df1565b61031e565b34801561016d57600080fd5b50604051601281526020016100e9565b61019061018b366004610ea2565b610342565b005b34801561019e57600080fd5b506101126101ad366004610dc5565b61053f565b3480156101be57600080fd5b506101336101cd366004610f96565b6001600160a01b031660009081526020819052604090205490565b3480156101f457600080fd5b506100dc610561565b34801561020957600080fd5b50610133610570565b34801561021e57600080fd5b5061011261022d366004610dc5565b6105e3565b34801561023e57600080fd5b5061011261024d366004610dc5565b61065e565b34801561025e57600080fd5b5061013361026d366004610fb3565b61066c565b60606003805461028190610fec565b80601f01602080910402602001604051908101604052809291908181526020018280546102ad90610fec565b80156102fa5780601f106102cf576101008083540402835291602001916102fa565b820191906000526020600020905b8154815290600101906020018083116102dd57829003601f168201915b5050505050905090565b600033610312818585610697565b60019150505b92915050565b60003361032c8582856107bb565b610337858585610835565b506001949350505050565b6020810151600081900361036957604051634bf29fe960e01b815260040160405180910390fd5b600064e8d4a51000610379610570565b610383908461103c565b61038d9190611053565b83516040516370a0823160e01b81523360048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156103da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fe9190611075565b90508181101561042957604051633dcd925d60e11b8152600481018290526024015b60405180910390fd5b60006104ab83600760009054906101000a90046001600160a01b03166001600160a01b031663a5a410316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a69190611075565b6109d9565b91506104b99050818461108e565b60208601526104c9858483610a0c565b6104d33385610af8565b60075460405163120da16d60e01b815260048101839052600060248201526001600160a01b039091169063120da16d90604401600060405180830381600087803b15801561052057600080fd5b505af1158015610534573d6000803e3d6000fd5b505050505050505050565b600033610312818585610552838361066c565b61055c919061108e565b610697565b60606004805461028190610fec565b6007546040805163cab0f33560e01b815290516000926001600160a01b03169163cab0f3359160048083019260209291908290030181865afa1580156105ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105de9190611075565b905090565b600033816105f1828661066c565b9050838110156106515760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610420565b6103378286868403610697565b600033610312818585610835565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166106f95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610420565b6001600160a01b03821661075a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610420565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006107c7848461066c565b9050600019811461082f57818110156108225760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610420565b61082f8484848403610697565b50505050565b6001600160a01b0383166108995760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610420565b6001600160a01b0382166108fb5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610420565b6001600160a01b038316600090815260208190526040902054818110156109735760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610420565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361082f565b60008060006109e88585610bb7565b6109f290866110a1565b90506000610a0082876110a1565b96919550909350505050565b8251600090610a25906001600160a01b03168385610bd7565b60408051606080820183528382528783015160208301528701519181019190915260075491925090600090610a65906001600160a01b0316308688610c6d565b608087015160405163edd9444b60e01b81529192506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163edd9444b91610abe9186918691339190600401611103565b600060405180830381600087803b158015610ad857600080fd5b505af1158015610aec573d6000803e3d6000fd5b50505050505050505050565b6001600160a01b038216610b4e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610420565b8060026000828254610b60919061108e565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000610bc68383612710610d04565b610bd090846110a1565b9392505050565b6040805160028082526060828101909352816020015b6040805180820190915260008082526020820152815260200190600190039081610bed579050509050610c208484610d23565b81600081518110610c3357610c336111bb565b6020026020010181905250610c488483610d23565b81600181518110610c5b57610c5b6111bb565b60200260200101819052509392505050565b6040805160028082526060828101909352816020015b6040805180820190915260008082526020820152815260200190600190039081610c83579050509050610cb68584610d23565b81600081518110610cc957610cc96111bb565b6020026020010181905250610cde8483610d23565b81600181518110610cf157610cf16111bb565b6020026020010181905250949350505050565b828202811515841585830485141716610d1c57600080fd5b0492915050565b604080518082018252600080825260209182015281518083019092526001600160a01b039390931681529182015290565b6000815180845260005b81811015610d7a57602081850181015186830182015201610d5e565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610bd06020830184610d54565b6001600160a01b0381168114610dc257600080fd5b50565b60008060408385031215610dd857600080fd5b8235610de381610dad565b946020939093013593505050565b600080600060608486031215610e0657600080fd5b8335610e1181610dad565b92506020840135610e2181610dad565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610e6b57610e6b610e32565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e9a57610e9a610e32565b604052919050565b60006020808385031215610eb557600080fd5b823567ffffffffffffffff80821115610ecd57600080fd5b9084019060a08287031215610ee157600080fd5b610ee9610e48565b8235610ef481610dad565b8082525083830135848201526040830135604082015260608301356060820152608083013582811115610f2657600080fd5b80840193505086601f840112610f3b57600080fd5b823582811115610f4d57610f4d610e32565b610f5f601f8201601f19168601610e71565b92508083528785828601011115610f7557600080fd5b80858501868501376000908301909401939093526080830152509392505050565b600060208284031215610fa857600080fd5b8135610bd081610dad565b60008060408385031215610fc657600080fd5b8235610fd181610dad565b91506020830135610fe181610dad565b809150509250929050565b600181811c9082168061100057607f821691505b60208210810361102057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761031857610318611026565b60008261107057634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561108757600080fd5b5051919050565b8082018082111561031857610318611026565b8181038181111561031857610318611026565b600081518084526020808501945080840160005b838110156110f857815180516001600160a01b0316885283015183880152604090960195908201906001016110c8565b509495945050505050565b60808152600060e082018651606060808501528181518084526101008601915060209350838301925060005b8181101561115f57835180516001600160a01b03168452850151858401529284019260409092019160010161112f565b50508289015160a0860152604089015160c08601528481038386015261118581896110b4565b9250505061119e60408401866001600160a01b03169052565b82810360608401526111b08185610d54565b979650505050505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220a90d6a1d81bce85a01166b5ea7a80928cd1cd6ae23c97c8056c41361060c29d364736f6c63430008130033",
    "sourceMap": "696:1858:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:47;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;-1:-1:-1;4431:197:47;;;;;:::i;:::-;;:::i;:::-;;;1288:14:69;;1281:22;1263:41;;1251:2;1236:18;4431:197:47;1123:187:69;3242:106:47;;;;;;;;;;-1:-1:-1;3329:12:47;;3242:106;;;1461:25:69;;;1449:2;1434:18;3242:106:47;1315:177:69;5190:286:47;;;;;;;;;;-1:-1:-1;5190:286:47;;;;;:::i;:::-;;:::i;3091:91::-;;;;;;;;;;-1:-1:-1;3091:91:47;;3173:2;2100:36:69;;2088:2;2073:18;3091:91:47;1958:184:69;1288:597:2;;;;;;:::i;:::-;;:::i;:::-;;5871:234:47;;;;;;;;;;-1:-1:-1;5871:234:47;;;;;:::i;:::-;;:::i;3406:125::-;;;;;;;;;;-1:-1:-1;3406:125:47;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:47;3480:7;3506:18;;;;;;;;;;;;3406:125;2365:102;;;;;;;;;;;;;:::i;1122:93:2:-;;;;;;;;;;;;;:::i;6592:427:47:-;;;;;;;;;;-1:-1:-1;6592:427:47;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;;;;;-1:-1:-1;3727:189:47;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;;;;;-1:-1:-1;3974:149:47;;;;;:::i;:::-;;:::i;2154:98::-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:51;4568:32:47;719:10:51;4584:7:47;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;5190:286::-;5317:4;719:10:51;5373:38:47;5389:4;719:10:51;5404:6:47;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:47;;5190:286;-1:-1:-1;;;;5190:286:47:o;1288:597:2:-;1381:13;;;;1365;1408:10;;;1404:37;;1427:14;;-1:-1:-1;;;1427:14:2;;;;;;;;;;;1404:37;1452:13;1491:8;1477:10;:8;:10::i;:::-;1469:18;;:5;:18;:::i;:::-;1468:31;;;;:::i;:::-;1532:12;;:34;;-1:-1:-1;;;1532:34:2;;1555:10;1532:34;;;5974:51:69;1452:47:2;;-1:-1:-1;1509:20:2;;-1:-1:-1;;;;;1532:22:2;;;;;;5947:18:69;;1532:34:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1509:57;;1596:5;1581:12;:20;1577:63;;;1610:30;;-1:-1:-1;;;1610:30:2;;;;;1461:25:69;;;1434:18;;1610:30:2;;;;;;;;1577:63;1654:11;1669:46;1687:5;1694:3;;;;;;;;;-1:-1:-1;;;;;1694:3:2;-1:-1:-1;;;;;1694:18:2;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1669:17;:46::i;:::-;1651:64;-1:-1:-1;1750:11:2;;-1:-1:-1;1651:64:2;1750:5;:11;:::i;:::-;1734:13;;;:27;1773:26;1734:6;1788:5;1795:3;1773:6;:26::i;:::-;1810:24;1816:10;1828:5;1810;:24::i;:::-;1845:3;;:33;;-1:-1:-1;;;1845:33:2;;;;;6523:25:69;;;1845:3:2;6564:18:69;;;6557:50;-1:-1:-1;;;;;1845:3:2;;;;:21;;6496:18:69;;1845:33:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1355:530;;;;1288:597;:::o;5871:234:47:-;5959:4;719:10:51;6013:64:47;719:10:51;6029:7:47;6066:10;6038:25;719:10:51;6029:7:47;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;1122:93:2:-;1188:3;;:20;;;-1:-1:-1;;;1188:20:2;;;;1162:7;;-1:-1:-1;;;;;1188:3:2;;:18;;:20;;;;;;;;;;;;;;:3;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1181:27;;1122:93;:::o;6592:427:47:-;6685:4;719:10:51;6685:4:47;6766:25;719:10:51;6783:7:47;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:47;;6820:2:69;6801:85:47;;;6802:21:69;6859:2;6839:18;;;6832:30;6898:34;6878:18;;;6871:62;-1:-1:-1;;;6949:18:69;;;6942:35;6994:19;;6801:85:47;6618:401:69;6801:85:47;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:51;3860:28:47;719:10:51;3877:2:47;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:47;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:47;;10627:68;;;;-1:-1:-1;;;10627:68:47;;7226:2:69;10627:68:47;;;7208:21:69;7265:2;7245:18;;;7238:30;7304:34;7284:18;;;7277:62;-1:-1:-1;;;7355:18:69;;;7348:34;7399:19;;10627:68:47;7024:400:69;10627:68:47;-1:-1:-1;;;;;10713:21:47;;10705:68;;;;-1:-1:-1;;;10705:68:47;;7631:2:69;10705:68:47;;;7613:21:69;7670:2;7650:18;;;7643:30;7709:34;7689:18;;;7682:62;-1:-1:-1;;;7760:18:69;;;7753:32;7802:19;;10705:68:47;7429:398:69;10705:68:47;-1:-1:-1;;;;;10784:18:47;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1461:25:69;;;10835:32:47;;1434:18:69;10835:32:47;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:47;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:47;;8034:2:69;11404:68:47;;;8016:21:69;8073:2;8053:18;;;8046:30;8112:31;8092:18;;;8085:59;8161:18;;11404:68:47;7832:353:69;11404:68:47;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:47;;7591:68;;;;-1:-1:-1;;;7591:68:47;;8392:2:69;7591:68:47;;;8374:21:69;8431:2;8411:18;;;8404:30;8470:34;8450:18;;;8443:62;-1:-1:-1;;;8521:18:69;;;8514:35;8566:19;;7591:68:47;8190:401:69;7591:68:47;-1:-1:-1;;;;;7677:16:47;;7669:64;;;;-1:-1:-1;;;7669:64:47;;8798:2:69;7669:64:47;;;8780:21:69;8837:2;8817:18;;;8810:30;8876:34;8856:18;;;8849:62;-1:-1:-1;;;8927:18:69;;;8920:33;8970:19;;7669:64:47;8596:399:69;7669:64:47;-1:-1:-1;;;;;7815:15:47;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:47;;9202:2:69;7840:72:47;;;9184:21:69;9241:2;9221:18;;;9214:30;9280:34;9260:18;;;9253:62;-1:-1:-1;;;9331:18:69;;;9324:36;9377:19;;7840:72:47;9000:402:69;7840:72:47;-1:-1:-1;;;;;7946:15:47;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1461:25:69;;;8161:13:47;;8210:26;;1434:18:69;8210:26:47;;;;;;;8247:37;12180:121;790:246:40;867:4;873;889:11;913:40;931:7;940:12;913:17;:40::i;:::-;903:50;;:7;:50;:::i;:::-;889:64;-1:-1:-1;963:17:40;983:13;889:64;983:7;:13;:::i;:::-;963:33;1025:3;;-1:-1:-1;790:246:40;;-1:-1:-1;;;;790:246:40:o;1892:652:2:-;2066:12;;2021:42;;2066;;-1:-1:-1;;;;;2066:28:2;2095:4;2101:6;2066:28;:42::i;:::-;2168:148;;;;;;;;;;;;2254:12;;;;2168:148;;;;2290:15;;;2168:148;;;;;;;2401:3;;2021:87;;-1:-1:-1;2168:148:2;2119:46;;2393:60;;-1:-1:-1;;;;;2401:3:2;2433:4;2440;2446:6;2393:31;:60::i;:::-;2520:16;;;;2464:73;;-1:-1:-1;;;2464:73:2;;2327:126;;-1:-1:-1;;;;;;2464:7:2;:26;;;;:73;;2491:6;;2327:126;;2508:10;;2520:16;2464:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2011:533;;;1892:652;;;:::o;8567:535:47:-;-1:-1:-1;;;;;8650:21:47;;8642:65;;;;-1:-1:-1;;;8642:65:47;;11852:2:69;8642:65:47;;;11834:21:69;11891:2;11871:18;;;11864:30;11930:33;11910:18;;;11903:61;11981:18;;8642:65:47;11650:355:69;8642:65:47;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:47;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;1461:25:69;;;8999:37:47;;1434:18:69;8999:37:47;;;;;;;8567:535;;:::o;571:212:40:-;681:20;738:38;:7;757:11;770:5;738:18;:38::i;:::-;728:48;;:7;:48;:::i;:::-;713:63;571:212;-1:-1:-1;;;571:212:40:o;477:346:41:-;670:34;;;702:1;670:34;;;601:42;670:34;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;670:34:41;;;;;;;;;;;;;;;660:44;;727:32;746:6;754:4;727:18;:32::i;:::-;714:7;722:1;714:10;;;;;;;;:::i;:::-;;;;;;:45;;;;782:34;801:6;809;782:18;:34::i;:::-;769:7;777:1;769:10;;;;;;;;:::i;:::-;;;;;;:47;;;;477:346;;;;;:::o;1129:401::-;1371:42;;;1411:1;1371:42;;;1294:50;1371:42;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;1371:42:41;;;;;;;;;;;;;;;1361:52;;1436:30;1447:12;1461:4;1436:10;:30::i;:::-;1423:7;1431:1;1423:10;;;;;;;;:::i;:::-;;;;;;:43;;;;1489:34;1500:14;1516:6;1489:10;:34::i;:::-;1476:7;1484:1;1476:10;;;;;;;;:::i;:::-;;;;;;:47;;;;1129:401;;;;;;:::o;1504:535:52:-;1710:9;;;1841:19;;1834:27;1866:9;;1880;;;1877:16;;1863:31;1830:65;1820:121;;1925:1;1922;1915:12;1820:121;2004:19;;1504:535;-1:-1:-1;;1504:535:52:o;193:278:41:-;-1:-1:-1;;;;;;;;;;;;;;;;;371:93:41;;;;;;;;-1:-1:-1;;;;;371:93:41;;;;;;;;;;;193:278::o;14:423:69:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;667:131::-;-1:-1:-1;;;;;742:31:69;;732:42;;722:70;;788:1;785;778:12;722:70;667:131;:::o;803:315::-;871:6;879;932:2;920:9;911:7;907:23;903:32;900:52;;;948:1;945;938:12;900:52;987:9;974:23;1006:31;1031:5;1006:31;:::i;:::-;1056:5;1108:2;1093:18;;;;1080:32;;-1:-1:-1;;;803:315:69:o;1497:456::-;1574:6;1582;1590;1643:2;1631:9;1622:7;1618:23;1614:32;1611:52;;;1659:1;1656;1649:12;1611:52;1698:9;1685:23;1717:31;1742:5;1717:31;:::i;:::-;1767:5;-1:-1:-1;1824:2:69;1809:18;;1796:32;1837:33;1796:32;1837:33;:::i;:::-;1497:456;;1889:7;;-1:-1:-1;;;1943:2:69;1928:18;;;;1915:32;;1497:456::o;2147:127::-;2208:10;2203:3;2199:20;2196:1;2189:31;2239:4;2236:1;2229:15;2263:4;2260:1;2253:15;2279:253;2351:2;2345:9;2393:4;2381:17;;2428:18;2413:34;;2449:22;;;2410:62;2407:88;;;2475:18;;:::i;:::-;2511:2;2504:22;2279:253;:::o;2537:275::-;2608:2;2602:9;2673:2;2654:13;;-1:-1:-1;;2650:27:69;2638:40;;2708:18;2693:34;;2729:22;;;2690:62;2687:88;;;2755:18;;:::i;:::-;2791:2;2784:22;2537:275;;-1:-1:-1;2537:275:69:o;2817:1340::-;2904:6;2935:2;2978;2966:9;2957:7;2953:23;2949:32;2946:52;;;2994:1;2991;2984:12;2946:52;3034:9;3021:23;3063:18;3104:2;3096:6;3093:14;3090:34;;;3120:1;3117;3110:12;3090:34;3143:22;;;;3199:4;3181:16;;;3177:27;3174:47;;;3217:1;3214;3207:12;3174:47;3243:22;;:::i;:::-;3302:2;3289:16;3314:33;3339:7;3314:33;:::i;:::-;3370:7;3363:5;3356:22;;3431:2;3427;3423:11;3410:25;3405:2;3398:5;3394:14;3387:49;3489:2;3485;3481:11;3468:25;3463:2;3456:5;3452:14;3445:49;3547:2;3543;3539:11;3526:25;3521:2;3514:5;3510:14;3503:49;3598:3;3594:2;3590:12;3577:26;3628:2;3618:8;3615:16;3612:36;;;3644:1;3641;3634:12;3612:36;3675:8;3671:2;3667:17;3657:27;;;3722:7;3715:4;3711:2;3707:13;3703:27;3693:55;;3744:1;3741;3734:12;3693:55;3780:2;3767:16;3802:2;3798;3795:10;3792:36;;;3808:18;;:::i;:::-;3850:53;3893:2;3874:13;;-1:-1:-1;;3870:27:69;3866:36;;3850:53;:::i;:::-;3837:66;;3926:2;3919:5;3912:17;3966:7;3961:2;3956;3952;3948:11;3944:20;3941:33;3938:53;;;3987:1;3984;3977:12;3938:53;4042:2;4037;4033;4029:11;4024:2;4017:5;4013:14;4000:45;4086:1;4065:14;;;4061:23;;;4054:34;;;;4115:3;4104:15;;4097:30;-1:-1:-1;4108:5:69;2817:1340;-1:-1:-1;;;2817:1340:69:o;4162:247::-;4221:6;4274:2;4262:9;4253:7;4249:23;4245:32;4242:52;;;4290:1;4287;4280:12;4242:52;4329:9;4316:23;4348:31;4373:5;4348:31;:::i;4414:388::-;4482:6;4490;4543:2;4531:9;4522:7;4518:23;4514:32;4511:52;;;4559:1;4556;4549:12;4511:52;4598:9;4585:23;4617:31;4642:5;4617:31;:::i;:::-;4667:5;-1:-1:-1;4724:2:69;4709:18;;4696:32;4737:33;4696:32;4737:33;:::i;:::-;4789:7;4779:17;;;4414:388;;;;;:::o;4807:380::-;4886:1;4882:12;;;;4929;;;4950:61;;5004:4;4996:6;4992:17;4982:27;;4950:61;5057:2;5049:6;5046:14;5026:18;5023:38;5020:161;;5103:10;5098:3;5094:20;5091:1;5084:31;5138:4;5135:1;5128:15;5166:4;5163:1;5156:15;5020:161;;4807:380;;;:::o;5192:127::-;5253:10;5248:3;5244:20;5241:1;5234:31;5284:4;5281:1;5274:15;5308:4;5305:1;5298:15;5324:168;5397:9;;;5428;;5445:15;;;5439:22;;5425:37;5415:71;;5466:18;;:::i;5497:217::-;5537:1;5563;5553:132;;5607:10;5602:3;5598:20;5595:1;5588:31;5642:4;5639:1;5632:15;5670:4;5667:1;5660:15;5553:132;-1:-1:-1;5699:9:69;;5497:217::o;6036:184::-;6106:6;6159:2;6147:9;6138:7;6134:23;6130:32;6127:52;;;6175:1;6172;6165:12;6127:52;-1:-1:-1;6198:16:69;;6036:184;-1:-1:-1;6036:184:69:o;6225:125::-;6290:9;;;6311:10;;;6308:36;;;6324:18;;:::i;9407:128::-;9474:9;;;9495:11;;;9492:37;;;9509:18;;:::i;9540:572::-;9617:3;9655:5;9649:12;9682:6;9677:3;9670:19;9708:4;9737:2;9732:3;9728:12;9721:19;;9774:2;9767:5;9763:14;9795:1;9805:282;9819:6;9816:1;9813:13;9805:282;;;9878:13;;9920:9;;-1:-1:-1;;;;;9916:35:69;9904:48;;9992:11;;9986:18;9972:12;;;9965:40;10034:4;10025:14;;;;10062:15;;;;9948:1;9834:9;9805:282;;;-1:-1:-1;10103:3:69;;9540:572;-1:-1:-1;;;;;9540:572:69:o;10117:1528::-;10564:3;10553:9;10546:22;10527:4;10606:3;10595:9;10591:19;10645:6;10639:13;10689:4;10683:3;10672:9;10668:19;10661:33;10714:6;10749:12;10743:19;10786:6;10778;10771:22;10824:3;10813:9;10809:19;10802:26;;10847:4;10837:14;;10892:2;10878:12;10874:21;10860:35;;10913:1;10923:282;10937:6;10934:1;10931:13;10923:282;;;10996:13;;11038:9;;-1:-1:-1;;;;;11034:35:69;11022:48;;11110:11;;11104:18;11090:12;;;11083:40;11180:15;;;;11152:4;11143:14;;;;11066:1;10952:9;10923:282;;;10927:3;;11260:2;11252:6;11248:15;11242:22;11236:3;11225:9;11221:19;11214:51;11320:4;11312:6;11308:17;11302:24;11296:3;11285:9;11281:19;11274:53;11372:9;11367:3;11363:19;11358:2;11347:9;11343:18;11336:47;11406:65;11467:3;11459:6;11406:65;:::i;:::-;11392:79;;;;11480:48;11522:4;11511:9;11507:20;11499:6;-1:-1:-1;;;;;5785:31:69;5773:44;;5719:104;11480:48;11578:9;11570:6;11566:22;11559:4;11548:9;11544:20;11537:52;11606:33;11632:6;11624;11606:33;:::i;:::-;11598:41;10117:1528;-1:-1:-1;;;;;;;10117:1528:69:o;12010:127::-;12071:10;12066:3;12062:20;12059:1;12052:31;12102:4;12099:1;12092:15;12126:4;12123:1;12116:15",
    "linkReferences": {},
    "immutableReferences": {
      "287": [
        {
          "start": 2692,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getPrice()": "98d5fdca",
    "increaseAllowance(address,uint256)": "39509351",
    "issue((address,uint256,uint256,uint256,bytes))": "31e8cb04",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Cant_be_zero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buyerBalance\",\"type\":\"uint256\"}],\"name\":\"Not_enough_funds\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IPermit2.Permit2Buy\",\"name\":\"buyOp_\",\"type\":\"tuple\"}],\"name\":\"issue\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EnergyETH.sol\":\"EnergyETH\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/unchecked-counter/lib/prb-test/src/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-test/=lib/unchecked-counter/lib/prb-test/src/\",\":solmate/=node_modules/solmate/\",\":src/=lib/unchecked-counter/src/\",\":unchecked-counter/=lib/unchecked-counter/src/\"]},\"sources\":{\"contracts/AppStorage.sol\":{\"keccak256\":\"0x1d01e8211092b3e102f6247d710bdc93d56f2ce604a3652c88e9efb372d5b092\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e52d470e3263148fbebb0452bf2372696e685bcc0fcf4693f11fc8222937549e\",\"dweb:/ipfs/QmZ3EXMbatJ1yGSdT7a8d5azedM8TuLFeGiuNMS2dd3pqY\"]},\"contracts/EnergyETH.sol\":{\"keccak256\":\"0x8860d30ee8effbfde1841f5a1c9f49d0b52dee9f2ee5151e7612b24f58ca71d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29ebf8d79af27669f1ddfdade3103a19a895a0be2505000cc72e0a5239f85774\",\"dweb:/ipfs/QmcP3fztfkTYYVrBBSPCufMtoPdtp9KdX5jrGEXWDzzB2P\"]},\"interfaces/IPermit2.sol\":{\"keccak256\":\"0x9ab81ce4f763de93e8b6a6cd92825bcd623100fab4ecd3fa7cbc92745fd42cad\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e7d2f46be31c7e4c1850ab702d6614cc542ce86e78fa3569a0bd1954ea342aeb\",\"dweb:/ipfs/QmdXYebMsaSFKUpqkYxB8j6HNexjumE5QMxbRRgFZFEmjS\"]},\"interfaces/ozIDiamond.sol\":{\"keccak256\":\"0x0137519b286ef40395ba210c5057ff27c35d94244fa9daa38263e474db9b5f61\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://600707036bdc33164c93b81ca709efb98d770f475dc950949ed2bdd7eaa52d23\",\"dweb:/ipfs/QmbZTVFiLFrt9DAgwDvVGCBJPPwvNBvM2m2unRdoNTexaH\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/unchecked-counter/src/UC.sol\":{\"keccak256\":\"0xbc1a5f62265ddbc9f9a2604898b39f51a6a67b8a805dff49c677f39f372e2713\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba5db66c8d3e329adc64151076ceed09ddf87f8ed13a11cc9f5b59ce1f07bb6a\",\"dweb:/ipfs/QmZtk54Y2ks6MnTukDt1HhmtALFAXeagKi3DpYwd1qatML\"]},\"libraries/LibHelpers.sol\":{\"keccak256\":\"0x83373ee4974d9d9ba8dd08c4504629da5d776fec3e121c5c4be1e64d8d36788b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://aa436f6aedc76cec8da09fbf3d31792a4fd6f1a5a4d2b66f68489c7d414006a0\",\"dweb:/ipfs/QmYLFCCbuVznuqTdkGDvPe6ENFLd4Mh2iVEnxhYTGFDHJc\"]},\"libraries/LibPermit2.sol\":{\"keccak256\":\"0xcd292910e6a8def4d329ae651521cb4538e516c6210a049b93a3e30be6a38155\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b715d4a75bcd3f1c94d8f15bb7be814df5ed3bf3e2832a07442e7e178f7a6f0a\",\"dweb:/ipfs/QmYLipjCDdjHbftpQYoXWBXLgL3pBCBDU3cxyahY6cXVTq\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@rari-capital/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x96ab2a92fbac88a704270b039691afb363c5a1ef1170fb0c955043e4da84b987\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://863c000efee45cb4abc204d77ff04a43fc3268f3524ff8a5e96b43b1a1658f5b\",\"dweb:/ipfs/QmVgN2VivBwgxv8gKKZuGQw4YfQRvpgYbfvuRzKTfMgFWi\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Cant_be_zero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "buyerBalance",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Not_enough_funds"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IPermit2.Permit2Buy",
              "name": "buyOp_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "issue"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/unchecked-counter/lib/prb-test/src/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "prb-test/=lib/unchecked-counter/lib/prb-test/src/",
        "solmate/=node_modules/solmate/",
        "src/=lib/unchecked-counter/src/",
        "unchecked-counter/=lib/unchecked-counter/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/EnergyETH.sol": "EnergyETH"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/AppStorage.sol": {
        "keccak256": "0x1d01e8211092b3e102f6247d710bdc93d56f2ce604a3652c88e9efb372d5b092",
        "urls": [
          "bzz-raw://e52d470e3263148fbebb0452bf2372696e685bcc0fcf4693f11fc8222937549e",
          "dweb:/ipfs/QmZ3EXMbatJ1yGSdT7a8d5azedM8TuLFeGiuNMS2dd3pqY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/EnergyETH.sol": {
        "keccak256": "0x8860d30ee8effbfde1841f5a1c9f49d0b52dee9f2ee5151e7612b24f58ca71d2",
        "urls": [
          "bzz-raw://29ebf8d79af27669f1ddfdade3103a19a895a0be2505000cc72e0a5239f85774",
          "dweb:/ipfs/QmcP3fztfkTYYVrBBSPCufMtoPdtp9KdX5jrGEXWDzzB2P"
        ],
        "license": "GPL-2.0-or-later"
      },
      "interfaces/IPermit2.sol": {
        "keccak256": "0x9ab81ce4f763de93e8b6a6cd92825bcd623100fab4ecd3fa7cbc92745fd42cad",
        "urls": [
          "bzz-raw://e7d2f46be31c7e4c1850ab702d6614cc542ce86e78fa3569a0bd1954ea342aeb",
          "dweb:/ipfs/QmdXYebMsaSFKUpqkYxB8j6HNexjumE5QMxbRRgFZFEmjS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "interfaces/ozIDiamond.sol": {
        "keccak256": "0x0137519b286ef40395ba210c5057ff27c35d94244fa9daa38263e474db9b5f61",
        "urls": [
          "bzz-raw://600707036bdc33164c93b81ca709efb98d770f475dc950949ed2bdd7eaa52d23",
          "dweb:/ipfs/QmbZTVFiLFrt9DAgwDvVGCBJPPwvNBvM2m2unRdoNTexaH"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/unchecked-counter/src/UC.sol": {
        "keccak256": "0xbc1a5f62265ddbc9f9a2604898b39f51a6a67b8a805dff49c677f39f372e2713",
        "urls": [
          "bzz-raw://ba5db66c8d3e329adc64151076ceed09ddf87f8ed13a11cc9f5b59ce1f07bb6a",
          "dweb:/ipfs/QmZtk54Y2ks6MnTukDt1HhmtALFAXeagKi3DpYwd1qatML"
        ],
        "license": "MIT"
      },
      "libraries/LibHelpers.sol": {
        "keccak256": "0x83373ee4974d9d9ba8dd08c4504629da5d776fec3e121c5c4be1e64d8d36788b",
        "urls": [
          "bzz-raw://aa436f6aedc76cec8da09fbf3d31792a4fd6f1a5a4d2b66f68489c7d414006a0",
          "dweb:/ipfs/QmYLFCCbuVznuqTdkGDvPe6ENFLd4Mh2iVEnxhYTGFDHJc"
        ],
        "license": "GPL-2.0-or-later"
      },
      "libraries/LibPermit2.sol": {
        "keccak256": "0xcd292910e6a8def4d329ae651521cb4538e516c6210a049b93a3e30be6a38155",
        "urls": [
          "bzz-raw://b715d4a75bcd3f1c94d8f15bb7be814df5ed3bf3e2832a07442e7e178f7a6f0a",
          "dweb:/ipfs/QmYLipjCDdjHbftpQYoXWBXLgL3pBCBDU3cxyahY6cXVTq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@rari-capital/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x96ab2a92fbac88a704270b039691afb363c5a1ef1170fb0c955043e4da84b987",
        "urls": [
          "bzz-raw://863c000efee45cb4abc204d77ff04a43fc3268f3524ff8a5e96b43b1a1658f5b",
          "dweb:/ipfs/QmVgN2VivBwgxv8gKKZuGQw4YfQRvpgYbfvuRzKTfMgFWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/EnergyETH.sol",
    "id": 460,
    "exportedSymbols": {
      "Address": [
        35822
      ],
      "AggregatorV3Interface": [
        34802
      ],
      "Cant_approve": [
        255
      ],
      "Cant_be_zero": [
        247
      ],
      "Cant_transfer": [
        259
      ],
      "Context": [
        35844
      ],
      "DataInfo": [
        221
      ],
      "ERC20": [
        35389
      ],
      "EnergyETH": [
        459
      ],
      "FixedPointMathLib": [
        35963
      ],
      "IERC20": [
        35467
      ],
      "IERC20Metadata": [
        35492
      ],
      "IPermit2": [
        2507
      ],
      "ISwapRouter": [
        36529
      ],
      "IUniswapV3SwapCallback": [
        35999
      ],
      "LibHelpers": [
        32905
      ],
      "LibPermit2": [
        33034
      ],
      "Not_enough_funds": [
        251
      ],
      "UC": [
        31263
      ],
      "console": [
        23000
      ],
      "ozIDiamond": [
        2886
      ],
      "uc": [
        31396
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:2511:2",
    "nodes": [
      {
        "id": 236,
        "nodeType": "PragmaDirective",
        "src": "45:23:2",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 237,
        "nodeType": "ImportDirective",
        "src": "71:68:2",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 460,
        "sourceUnit": 36530,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 238,
        "nodeType": "ImportDirective",
        "src": "140:56:2",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 460,
        "sourceUnit": 35468,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 239,
        "nodeType": "ImportDirective",
        "src": "197:55:2",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 460,
        "sourceUnit": 35390,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 240,
        "nodeType": "ImportDirective",
        "src": "253:51:2",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 460,
        "sourceUnit": 35823,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 241,
        "nodeType": "ImportDirective",
        "src": "305:38:2",
        "nodes": [],
        "absolutePath": "interfaces/ozIDiamond.sol",
        "file": "../interfaces/ozIDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 460,
        "sourceUnit": 2887,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 242,
        "nodeType": "ImportDirective",
        "src": "344:36:2",
        "nodes": [],
        "absolutePath": "interfaces/IPermit2.sol",
        "file": "../interfaces/IPermit2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 460,
        "sourceUnit": 2508,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 243,
        "nodeType": "ImportDirective",
        "src": "381:37:2",
        "nodes": [],
        "absolutePath": "libraries/LibHelpers.sol",
        "file": "../libraries/LibHelpers.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 460,
        "sourceUnit": 32906,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 244,
        "nodeType": "ImportDirective",
        "src": "419:37:2",
        "nodes": [],
        "absolutePath": "libraries/LibPermit2.sol",
        "file": "../libraries/LibPermit2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 460,
        "sourceUnit": 33035,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 245,
        "nodeType": "ImportDirective",
        "src": "458:31:2",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 460,
        "sourceUnit": 23001,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 247,
        "nodeType": "ErrorDefinition",
        "src": "525:21:2",
        "nodes": [],
        "errorSelector": "4bf29fe9",
        "name": "Cant_be_zero",
        "nameLocation": "531:12:2",
        "parameters": {
          "id": 246,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "543:2:2"
        }
      },
      {
        "id": 251,
        "nodeType": "ErrorDefinition",
        "src": "547:45:2",
        "nodes": [],
        "errorSelector": "7b9b24ba",
        "name": "Not_enough_funds",
        "nameLocation": "553:16:2",
        "parameters": {
          "id": 250,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 249,
              "mutability": "mutable",
              "name": "buyerBalance",
              "nameLocation": "578:12:2",
              "nodeType": "VariableDeclaration",
              "scope": 251,
              "src": "570:20:2",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 248,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "570:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "569:22:2"
        }
      },
      {
        "id": 255,
        "nodeType": "ErrorDefinition",
        "src": "593:35:2",
        "nodes": [],
        "errorSelector": "1c806982",
        "name": "Cant_approve",
        "nameLocation": "599:12:2",
        "parameters": {
          "id": 254,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 253,
              "mutability": "mutable",
              "name": "amount",
              "nameLocation": "620:6:2",
              "nodeType": "VariableDeclaration",
              "scope": 255,
              "src": "612:14:2",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 252,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "612:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "611:16:2"
        }
      },
      {
        "id": 259,
        "nodeType": "ErrorDefinition",
        "src": "629:36:2",
        "nodes": [],
        "errorSelector": "22cc7a08",
        "name": "Cant_transfer",
        "nameLocation": "635:13:2",
        "parameters": {
          "id": 258,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 257,
              "mutability": "mutable",
              "name": "amount",
              "nameLocation": "657:6:2",
              "nodeType": "VariableDeclaration",
              "scope": 259,
              "src": "649:14:2",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 256,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "649:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "648:16:2"
        }
      },
      {
        "id": 459,
        "nodeType": "ContractDefinition",
        "src": "696:1858:2",
        "nodes": [
          {
            "id": 263,
            "nodeType": "UsingForDirective",
            "src": "731:23:2",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 262,
              "name": "LibPermit2",
              "nameLocations": [
                "737:10:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33034,
              "src": "737:10:2"
            }
          },
          {
            "id": 269,
            "nodeType": "VariableDeclaration",
            "src": "761:64:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "USDC",
            "nameLocation": "768:4:2",
            "scope": 459,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$35467",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 265,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 264,
                "name": "IERC20",
                "nameLocations": [
                  "761:6:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35467,
                "src": "761:6:2"
              },
              "referencedDeclaration": 35467,
              "src": "761:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$35467",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307846463937304136314130346231634131343833344134336635644534353333654244444235434338",
                  "id": 267,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "782:42:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 266,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 35467,
                "src": "775:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35467_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 268,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "775:50:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$35467",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 275,
            "nodeType": "VariableDeclaration",
            "src": "831:64:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "USDT",
            "nameLocation": "838:4:2",
            "scope": 459,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$35467",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 271,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 270,
                "name": "IERC20",
                "nameLocations": [
                  "831:6:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35467,
                "src": "831:6:2"
              },
              "referencedDeclaration": 35467,
              "src": "831:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$35467",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307846643038366243374344354334383144434339433835656245343738413143306236394643626239",
                  "id": 273,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "852:42:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 272,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 35467,
                "src": "845:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35467_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 274,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "845:50:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$35467",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 281,
            "nodeType": "VariableDeclaration",
            "src": "906:71:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "OZL",
            "nameLocation": "917:3:2",
            "scope": 459,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ozIDiamond_$2886",
              "typeString": "contract ozIDiamond"
            },
            "typeName": {
              "id": 277,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 276,
                "name": "ozIDiamond",
                "nameLocations": [
                  "906:10:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2886,
                "src": "906:10:2"
              },
              "referencedDeclaration": 2886,
              "src": "906:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ozIDiamond_$2886",
                "typeString": "contract ozIDiamond"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837443166313344643035453662303637334443334430424661313464343041373443666133454632",
                  "id": 279,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "934:42:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x7D1f13Dd05E6b0673DC3D0BFa14d40A74Cfa3EF2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 278,
                "name": "ozIDiamond",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2886,
                "src": "923:10:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ozIDiamond_$2886_$",
                  "typeString": "type(contract ozIDiamond)"
                }
              },
              "id": 280,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "923:54:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ozIDiamond_$2886",
                "typeString": "contract ozIDiamond"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 287,
            "nodeType": "VariableDeclaration",
            "src": "983:81:2",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "PERMIT2",
            "nameLocation": "1002:7:2",
            "scope": 459,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPermit2_$2507",
              "typeString": "contract IPermit2"
            },
            "typeName": {
              "id": 283,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 282,
                "name": "IPermit2",
                "nameLocations": [
                  "983:8:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2507,
                "src": "983:8:2"
              },
              "referencedDeclaration": 2507,
              "src": "983:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPermit2_$2507",
                "typeString": "contract IPermit2"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030323244343733303330463131366444454539463642343361433738424133",
                  "id": 285,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1021:42:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x000000000022D473030F116dDEE9F6B43aC78BA3"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 284,
                "name": "IPermit2",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2507,
                "src": "1012:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IPermit2_$2507_$",
                  "typeString": "type(contract IPermit2)"
                }
              },
              "id": 286,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1012:52:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPermit2_$2507",
                "typeString": "contract IPermit2"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 295,
            "nodeType": "FunctionDefinition",
            "src": "1071:44:2",
            "nodes": [],
            "body": {
              "id": 294,
              "nodeType": "Block",
              "src": "1113:2:2",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "456e6572677920455448",
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1091:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4bd924deff42c91521bdefb2ca9a2dce3b459602ead3da951ea02073f4b45534",
                      "typeString": "literal_string \"Energy ETH\""
                    },
                    "value": "Energy ETH"
                  },
                  {
                    "hexValue": "65455448",
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1105:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d6c14ce243ce7d5c149bd600a04038f4aa1a3243dd4808b0e0441d8ec7b87788",
                      "typeString": "literal_string \"eETH\""
                    },
                    "value": "eETH"
                  }
                ],
                "id": 292,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 289,
                  "name": "ERC20",
                  "nameLocations": [
                    "1085:5:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35389,
                  "src": "1085:5:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1085:27:2"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1082:2:2"
            },
            "returnParameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1113:0:2"
            },
            "scope": 459,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 305,
            "nodeType": "FunctionDefinition",
            "src": "1122:93:2",
            "nodes": [],
            "body": {
              "id": 304,
              "nodeType": "Block",
              "src": "1171:44:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 300,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "1188:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$2886",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1192:14:2",
                      "memberName": "getEnergyPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2778,
                      "src": "1188:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1188:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 299,
                  "id": 303,
                  "nodeType": "Return",
                  "src": "1181:27:2"
                }
              ]
            },
            "functionSelector": "98d5fdca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "1131:8:2",
            "parameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1139:2:2"
            },
            "returnParameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "1162:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1162:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1161:9:2"
            },
            "scope": 459,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 390,
            "nodeType": "FunctionDefinition",
            "src": "1288:597:2",
            "nodes": [],
            "body": {
              "id": 389,
              "nodeType": "Block",
              "src": "1355:530:2",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 312,
                      "mutability": "mutable",
                      "name": "toBuy",
                      "nameLocation": "1373:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 389,
                      "src": "1365:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 311,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1365:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 315,
                  "initialValue": {
                    "expression": {
                      "id": 313,
                      "name": "buyOp_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 308,
                      "src": "1381:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permit2Buy_$2474_memory_ptr",
                        "typeString": "struct IPermit2.Permit2Buy memory"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1388:6:2",
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2467,
                    "src": "1381:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1365:29:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 316,
                      "name": "toBuy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 312,
                      "src": "1408:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1417:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1408:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 322,
                  "nodeType": "IfStatement",
                  "src": "1404:37:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 319,
                        "name": "Cant_be_zero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "1427:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1427:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 321,
                    "nodeType": "RevertStatement",
                    "src": "1420:21:2"
                  }
                },
                {
                  "assignments": [
                    324
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 324,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "1460:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 389,
                      "src": "1452:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 323,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1452:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 334,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 325,
                            "name": "toBuy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 312,
                            "src": "1469:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 326,
                              "name": "getPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "1477:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1477:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1469:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 329,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1468:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000_by_1",
                        "typeString": "int_const 1000000000000"
                      },
                      "id": 332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1491:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3132",
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1497:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_12_by_1",
                          "typeString": "int_const 12"
                        },
                        "value": "12"
                      },
                      "src": "1491:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000_by_1",
                        "typeString": "int_const 1000000000000"
                      }
                    },
                    "src": "1468:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1452:47:2"
                },
                {
                  "assignments": [
                    336
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 336,
                      "mutability": "mutable",
                      "name": "buyerBalance",
                      "nameLocation": "1517:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 389,
                      "src": "1509:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 335,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1509:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 343,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 340,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1555:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1559:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1555:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 337,
                          "name": "buyOp_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 308,
                          "src": "1532:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Permit2Buy_$2474_memory_ptr",
                            "typeString": "struct IPermit2.Permit2Buy memory"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1539:5:2",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2465,
                        "src": "1532:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35467",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1545:9:2",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35424,
                      "src": "1532:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1532:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1509:57:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 344,
                      "name": "buyerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 336,
                      "src": "1581:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 345,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 324,
                      "src": "1596:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1581:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 351,
                  "nodeType": "IfStatement",
                  "src": "1577:63:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 348,
                          "name": "buyerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 336,
                          "src": "1627:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 347,
                        "name": "Not_enough_funds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "1610:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) pure"
                        }
                      },
                      "id": 349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1610:30:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 350,
                    "nodeType": "RevertStatement",
                    "src": "1603:37:2"
                  }
                },
                {
                  "assignments": [
                    null,
                    353
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 353,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "1662:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 389,
                      "src": "1654:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 352,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1654:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 361,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 356,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "1687:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 357,
                            "name": "OZL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 281,
                            "src": "1694:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$2886",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1698:14:2",
                          "memberName": "getProtocolFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2788,
                          "src": "1694:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1694:20:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 354,
                        "name": "LibHelpers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32905,
                        "src": "1669:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibHelpers_$32905_$",
                          "typeString": "type(library LibHelpers)"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1680:6:2",
                      "memberName": "getFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32723,
                      "src": "1669:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1669:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1651:64:2"
                },
                {
                  "expression": {
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 362,
                        "name": "buyOp_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 308,
                        "src": "1734:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Permit2Buy_$2474_memory_ptr",
                          "typeString": "struct IPermit2.Permit2Buy memory"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1741:6:2",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2467,
                      "src": "1734:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 365,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "1750:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 366,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "1758:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1750:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1734:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "1734:27:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 371,
                        "name": "buyOp_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 308,
                        "src": "1780:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Permit2Buy_$2474_memory_ptr",
                          "typeString": "struct IPermit2.Permit2Buy memory"
                        }
                      },
                      {
                        "id": 372,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "1788:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 373,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "1795:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Permit2Buy_$2474_memory_ptr",
                          "typeString": "struct IPermit2.Permit2Buy memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 370,
                      "name": "_issue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 458,
                      "src": "1773:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Permit2Buy_$2474_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (struct IPermit2.Permit2Buy memory,uint256,uint256)"
                      }
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1773:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 375,
                  "nodeType": "ExpressionStatement",
                  "src": "1773:26:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 377,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1816:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1820:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1816:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 379,
                        "name": "toBuy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "1828:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 376,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35206,
                      "src": "1810:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1810:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:24:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 385,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "1867:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1872:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 382,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "1845:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$2886",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1849:17:2",
                      "memberName": "depositFeesInDeFi",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2795,
                      "src": "1845:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool) external"
                      }
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1845:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "1845:33:2"
                }
              ]
            },
            "functionSelector": "31e8cb04",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issue",
            "nameLocation": "1297:5:2",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 308,
                  "mutability": "mutable",
                  "name": "buyOp_",
                  "nameLocation": "1330:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "1303:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Permit2Buy_$2474_memory_ptr",
                    "typeString": "struct IPermit2.Permit2Buy"
                  },
                  "typeName": {
                    "id": 307,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 306,
                      "name": "IPermit2.Permit2Buy",
                      "nameLocations": [
                        "1303:8:2",
                        "1312:10:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2474,
                      "src": "1303:19:2"
                    },
                    "referencedDeclaration": 2474,
                    "src": "1303:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permit2Buy_$2474_storage_ptr",
                      "typeString": "struct IPermit2.Permit2Buy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1302:35:2"
            },
            "returnParameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1355:0:2"
            },
            "scope": 459,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 458,
            "nodeType": "FunctionDefinition",
            "src": "1892:652:2",
            "nodes": [],
            "body": {
              "id": 457,
              "nodeType": "Block",
              "src": "2011:533:2",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 405,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "2056:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 457,
                      "src": "2021:42:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TokenPermissions_$2440_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IPermit2.TokenPermissions[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 403,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 402,
                            "name": "IPermit2.TokenPermissions",
                            "nameLocations": [
                              "2021:8:2",
                              "2030:16:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2440,
                            "src": "2021:25:2"
                          },
                          "referencedDeclaration": 2440,
                          "src": "2021:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenPermissions_$2440_storage_ptr",
                            "typeString": "struct IPermit2.TokenPermissions"
                          }
                        },
                        "id": 404,
                        "nodeType": "ArrayTypeName",
                        "src": "2021:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TokenPermissions_$2440_storage_$dyn_storage_ptr",
                          "typeString": "struct IPermit2.TokenPermissions[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 412,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 409,
                        "name": "fee_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "2095:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 410,
                        "name": "quote_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "2101:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 406,
                          "name": "buyOp_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 393,
                          "src": "2066:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Permit2Buy_$2474_memory_ptr",
                            "typeString": "struct IPermit2.Permit2Buy memory"
                          }
                        },
                        "id": 407,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2073:5:2",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2465,
                        "src": "2066:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35467",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2079:15:2",
                      "memberName": "getTokenAmounts",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32971,
                      "src": "2066:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$35467_$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_TokenPermissions_$2440_memory_ptr_$dyn_memory_ptr_$attached_to$_t_contract$_IERC20_$35467_$",
                        "typeString": "function (contract IERC20,uint256,uint256) pure returns (struct IPermit2.TokenPermissions memory[] memory)"
                      }
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2066:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TokenPermissions_$2440_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct IPermit2.TokenPermissions memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2021:87:2"
                },
                {
                  "assignments": [
                    417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 417,
                      "mutability": "mutable",
                      "name": "permit",
                      "nameLocation": "2159:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 457,
                      "src": "2119:46:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PermitBatchTransferFrom_$2457_memory_ptr",
                        "typeString": "struct IPermit2.PermitBatchTransferFrom"
                      },
                      "typeName": {
                        "id": 416,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 415,
                          "name": "IPermit2.PermitBatchTransferFrom",
                          "nameLocations": [
                            "2119:8:2",
                            "2128:23:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2457,
                          "src": "2119:32:2"
                        },
                        "referencedDeclaration": 2457,
                        "src": "2119:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermitBatchTransferFrom_$2457_storage_ptr",
                          "typeString": "struct IPermit2.PermitBatchTransferFrom"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 426,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 420,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "2226:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TokenPermissions_$2440_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IPermit2.TokenPermissions memory[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 421,
                          "name": "buyOp_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 393,
                          "src": "2254:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Permit2Buy_$2474_memory_ptr",
                            "typeString": "struct IPermit2.Permit2Buy memory"
                          }
                        },
                        "id": 422,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2261:5:2",
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2469,
                        "src": "2254:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 423,
                          "name": "buyOp_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 393,
                          "src": "2290:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Permit2Buy_$2474_memory_ptr",
                            "typeString": "struct IPermit2.Permit2Buy memory"
                          }
                        },
                        "id": 424,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2297:8:2",
                        "memberName": "deadline",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2471,
                        "src": "2290:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_TokenPermissions_$2440_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IPermit2.TokenPermissions memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 418,
                        "name": "IPermit2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2507,
                        "src": "2168:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPermit2_$2507_$",
                          "typeString": "type(contract IPermit2)"
                        }
                      },
                      "id": 419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2177:23:2",
                      "memberName": "PermitBatchTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2457,
                      "src": "2168:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_PermitBatchTransferFrom_$2457_storage_ptr_$",
                        "typeString": "type(struct IPermit2.PermitBatchTransferFrom storage pointer)"
                      }
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "2215:9:2",
                      "2247:5:2",
                      "2280:8:2"
                    ],
                    "names": [
                      "permitted",
                      "nonce",
                      "deadline"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2168:148:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PermitBatchTransferFrom_$2457_memory_ptr",
                      "typeString": "struct IPermit2.PermitBatchTransferFrom memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2119:197:2"
                },
                {
                  "assignments": [
                    432
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 432,
                      "mutability": "mutable",
                      "name": "details",
                      "nameLocation": "2370:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 457,
                      "src": "2327:50:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$2462_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IPermit2.SignatureTransferDetails[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 430,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 429,
                            "name": "IPermit2.SignatureTransferDetails",
                            "nameLocations": [
                              "2327:8:2",
                              "2336:24:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2462,
                            "src": "2327:33:2"
                          },
                          "referencedDeclaration": 2462,
                          "src": "2327:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignatureTransferDetails_$2462_storage_ptr",
                            "typeString": "struct IPermit2.SignatureTransferDetails"
                          }
                        },
                        "id": 431,
                        "nodeType": "ArrayTypeName",
                        "src": "2327:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$2462_storage_$dyn_storage_ptr",
                          "typeString": "struct IPermit2.SignatureTransferDetails[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 445,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 440,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2433:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_EnergyETH_$459",
                              "typeString": "contract EnergyETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_EnergyETH_$459",
                              "typeString": "contract EnergyETH"
                            }
                          ],
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2425:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 438,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2425:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2425:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 442,
                        "name": "fee_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "2440:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 443,
                        "name": "quote_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "2446:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 435,
                            "name": "OZL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 281,
                            "src": "2401:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$2886",
                              "typeString": "contract ozIDiamond"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ozIDiamond_$2886",
                              "typeString": "contract ozIDiamond"
                            }
                          ],
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2393:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 433,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2393:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2393:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2406:18:2",
                      "memberName": "getTransferDetails",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33033,
                      "src": "2393:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_SignatureTransferDetails_$2462_memory_ptr_$dyn_memory_ptr_$attached_to$_t_address_$",
                        "typeString": "function (address,address,uint256,uint256) pure returns (struct IPermit2.SignatureTransferDetails memory[] memory)"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2393:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$2462_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct IPermit2.SignatureTransferDetails memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2327:126:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 449,
                        "name": "permit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "2491:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermitBatchTransferFrom_$2457_memory_ptr",
                          "typeString": "struct IPermit2.PermitBatchTransferFrom memory"
                        }
                      },
                      {
                        "id": 450,
                        "name": "details",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 432,
                        "src": "2499:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$2462_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IPermit2.SignatureTransferDetails memory[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 451,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2508:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2512:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2508:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 453,
                          "name": "buyOp_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 393,
                          "src": "2520:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Permit2Buy_$2474_memory_ptr",
                            "typeString": "struct IPermit2.Permit2Buy memory"
                          }
                        },
                        "id": 454,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2527:9:2",
                        "memberName": "signature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2473,
                        "src": "2520:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PermitBatchTransferFrom_$2457_memory_ptr",
                          "typeString": "struct IPermit2.PermitBatchTransferFrom memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$2462_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IPermit2.SignatureTransferDetails memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 446,
                        "name": "PERMIT2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "2464:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPermit2_$2507",
                          "typeString": "contract IPermit2"
                        }
                      },
                      "id": 448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2472:18:2",
                      "memberName": "permitTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2501,
                      "src": "2464:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PermitBatchTransferFrom_$2457_memory_ptr_$_t_array$_t_struct$_SignatureTransferDetails_$2462_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct IPermit2.PermitBatchTransferFrom memory,struct IPermit2.SignatureTransferDetails memory[] memory,address,bytes memory) external"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2464:73:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 456,
                  "nodeType": "ExpressionStatement",
                  "src": "2464:73:2"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_issue",
            "nameLocation": "1901:6:2",
            "parameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "buyOp_",
                  "nameLocation": "1944:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "1917:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Permit2Buy_$2474_memory_ptr",
                    "typeString": "struct IPermit2.Permit2Buy"
                  },
                  "typeName": {
                    "id": 392,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 391,
                      "name": "IPermit2.Permit2Buy",
                      "nameLocations": [
                        "1917:8:2",
                        "1926:10:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2474,
                      "src": "1917:19:2"
                    },
                    "referencedDeclaration": 2474,
                    "src": "1917:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permit2Buy_$2474_storage_ptr",
                      "typeString": "struct IPermit2.Permit2Buy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 395,
                  "mutability": "mutable",
                  "name": "quote_",
                  "nameLocation": "1968:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "1960:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1960:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "fee_",
                  "nameLocation": "1992:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "1984:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1984:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1907:95:2"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2011:0:2"
            },
            "scope": 459,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 260,
              "name": "ERC20",
              "nameLocations": [
                "718:5:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35389,
              "src": "718:5:2"
            },
            "id": 261,
            "nodeType": "InheritanceSpecifier",
            "src": "718:5:2"
          }
        ],
        "canonicalName": "EnergyETH",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          459,
          35389,
          35492,
          35467,
          35844
        ],
        "name": "EnergyETH",
        "nameLocation": "705:9:2",
        "scope": 460,
        "usedErrors": [
          247,
          251
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 2
}